<Application x:Class="IFactory.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:IFactory.UI"
             StartupUri="LoginWindow.xaml">
    <Application.Resources>
        <Style x:Key="LeftColumnStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <DockPanel>
                            <Rectangle Width="1" Fill="White" DockPanel.Dock="Right"/>
                            <Border Background="#004ee4" Padding="18" CornerRadius="20,0,0,0" BorderThickness="0">
                                <TextBlock Foreground="White" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center">
                  <ContentPresenter/>
                                </TextBlock>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RightColumnStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Border Background="#004ee4" Padding="18" CornerRadius="0,20,0,0" BorderThickness="0">
                            <TextBlock Foreground="White" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center">
                <ContentPresenter/>
                            </TextBlock>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MiddleColumnStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <DockPanel>
                            <Rectangle Width="1" Fill="White" DockPanel.Dock="Right"/>
                            <Border Background="#004ee4" Padding="18" BorderThickness="0">
                                <TextBlock Foreground="White" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center">
                  <ContentPresenter/>
                                </TextBlock>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SmallLeftColumnStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <DockPanel>
                            <Rectangle Width="1" Fill="White" DockPanel.Dock="Right"/>
                            <Border Background="#004ee4" Padding="6" CornerRadius="10,0,0,0" BorderThickness="0">
                                <TextBlock Foreground="White" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center">
                  <ContentPresenter/>
                                </TextBlock>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SmallRightColumnStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Border Background="#004ee4" Padding="6" CornerRadius="0,10,0,0" BorderThickness="0">
                            <TextBlock Foreground="White" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center">
                <ContentPresenter/>
                            </TextBlock>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SmallMiddleColumnStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <DockPanel>
                            <Rectangle Width="1" Fill="White" DockPanel.Dock="Right"/>
                            <Border Background="#004ee4" Padding="6" BorderThickness="0">
                                <TextBlock Foreground="White" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center">
                  <ContentPresenter/>
                                </TextBlock>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <TextBlock TextAlignment="Center" VerticalAlignment="Center" Background="{TemplateBinding Control.Background}"
                       Padding="{TemplateBinding Control.Padding}">
              <ContentPresenter/>
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AlignLeftDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <TextBlock TextAlignment="Left" VerticalAlignment="Center" Background="{TemplateBinding Control.Background}"
                       Padding="{TemplateBinding Control.Padding}">
              <ContentPresenter/>
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AlignRightDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <TextBlock TextAlignment="Right" VerticalAlignment="Center" Background="{TemplateBinding Control.Background}"
                       Padding="{TemplateBinding Control.Padding}">
              <ContentPresenter/>
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Control.Background" Value="Transparent"/>
        </Style>
        <Style x:Key="BaseDataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="DataGrid.AlternatingRowBackground" Value="#74d2f8"/>
            <Setter Property="DataGrid.RowBackground" Value="#8ddbfa"/>
            <Setter Property="Control.BorderBrush" Value="Transparent"/>
            <Setter Property="Control.Background" Value="Transparent"/>
            <Setter Property="DataGrid.AutoGenerateColumns" Value="false"/>
            <Setter Property="DataGrid.CanUserAddRows" Value="false"/>
            <Setter Property="DataGrid.CanUserDeleteRows" Value="false"/>
            <Setter Property="DataGrid.IsReadOnly" Value="true"/>
            <Setter Property="Control.BorderBrush" Value="Transparent"/>
            <Setter Property="DataGrid.GridLinesVisibility" Value="All"/>
            <Setter Property="DataGrid.HorizontalGridLinesBrush" Value="#2893f8"/>
            <Setter Property="DataGrid.VerticalGridLinesBrush" Value="#2893f8"/>
            <Setter Property="Control.BorderThickness" Value="0"/>
            <Setter Property="DataGrid.HeadersVisibility" Value="Column"/>
        </Style>
        <Style x:Key="DataGridStyle1" BasedOn="{StaticResource BaseDataGridStyle}" TargetType="{x:Type DataGrid}">
            <Setter Property="Canvas.Top" Value="190"/>
            <Setter Property="Canvas.Left" Value="343"/>
            <Setter Property="FrameworkElement.MaxWidth" Value="1175"/>
            <Setter Property="FrameworkElement.Height" Value="582"/>
        </Style>
        <Style x:Key="PagerStyle1">
            <Setter Property="Canvas.Top" Value="815"/>
            <Setter Property="Canvas.Left" Value="369"/>
        </Style>
        <Style x:Key="CellLinkButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.Margin" Value="8,0"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <TextBlock Name="textBlock" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock.TextDecorations>
                                <TextDecoration>
                                    <TextDecoration.Pen>
                                        <Pen Brush="Black"/>
                                    </TextDecoration.Pen>
                                </TextDecoration>
                            </TextBlock.TextDecorations>
              <ContentPresenter/>
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseTabTitleStyle" TargetType="{x:Type Label}">
            <Setter Property="Control.FontSize" Value="18"/>
            <Setter Property="Control.FontWeight" Value="Bold"/>
            <Setter Property="Control.Foreground" Value="White"/>
        </Style>
        <Style x:Key="TabTitleStyle1" TargetType="{x:Type Label}" BasedOn="{StaticResource BaseTabTitleStyle}">
            <Setter Property="Canvas.Left" Value="80"/>
            <Setter Property="Canvas.Top" Value="4"/>
        </Style>
        <Style x:Key="TabHeaderStyle1" TargetType="{x:Type Canvas}">
            <Setter Property="Canvas.Left" Value="552"/>
            <Setter Property="Canvas.Top" Value="116"/>
            <Setter Property="FrameworkElement.Width" Value="970"/>
            <Setter Property="FrameworkElement.Height" Value="42"/>
            <Setter Property="Panel.Background">
                <Setter.Value>
                    <ImageBrush ImageSource="/IFactory.UI;component/Assets/tab_header.png"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RightPanelBorder" TargetType="{x:Type Image}">
            <Setter Property="Canvas.Left" Value="318"/>
            <Setter Property="Canvas.Top" Value="102"/>
            <Setter Property="FrameworkElement.Width" Value="1227"/>
            <Setter Property="FrameworkElement.Height" Value="686"/>
            <Setter Property="Image.Source" Value="/IFactory.UI;component/Assets/right_panel_border.png"/>
        </Style>
        <Style x:Key="DialogCloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Canvas.Left" Value="437"/>
            <Setter Property="Canvas.Top" Value="2"/>
            <Setter Property="FrameworkElement.Width" Value="70"/>
            <Setter Property="FrameworkElement.Height" Value="27"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Panel.Background>
                                <ImageBrush ImageSource="Assets/dialog_close.png"/>
                            </Panel.Background>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PlaceHolderStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.Padding" Value="5,0"/>
            <Setter Property="TextBlock.FontSize" Value="14"/>
            <Setter Property="TextBlock.FontWeight" Value="Normal"/>
            <Setter Property="TextBlock.FontStyle" Value="Italic"/>
            <Setter Property="TextBlock.Foreground" Value="#666"/>
        </Style>
        <Style x:Key="BaseTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
            <Setter Property="FrameworkElement.Width" Value="260"/>
            <Setter Property="FrameworkElement.Height" Value="36"/>
            <Setter Property="Control.Padding" Value="3,0"/>
            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.FontSize" Value="16"/>
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                        <GradientStop Color="#24bdfa" Offset="0"/>
                        <GradientStop Color="#FFFFCB97" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Rectangle RadiusX="5" RadiusY="5" Fill="White" Stroke="#24bdfa" StrokeThickness="2"/>
                            <Rectangle Fill="{TemplateBinding Control.Background}" Margin="5,2"/>
                            <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" Padding="{TemplateBinding Control.Padding}" Focusable="false"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseDatePickerStyle" TargetType="{x:Type DatePicker}">
            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
            <Setter Property="FrameworkElement.Width" Value="260"/>
            <Setter Property="FrameworkElement.Height" Value="36"/>
            <Setter Property="Control.Padding" Value="3,0"/>
            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.FontSize" Value="16"/>
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                        <GradientStop Color="#24bdfa" Offset="0"/>
                        <GradientStop Color="#FFFFCB97" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Grid>
                            <Rectangle RadiusX="5" RadiusY="5" Fill="{TemplateBinding Control.Background}" Stroke="#24bdfa"
                         StrokeThickness="2"/>
                            <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" Padding="{TemplateBinding Control.Padding}" Focusable="false"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseDialogTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
            <Setter Property="FrameworkElement.Width" Value="260"/>
            <Setter Property="FrameworkElement.Height" Value="36"/>
            <Setter Property="Control.Padding" Value="3,0"/>
            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.FontSize" Value="16"/>
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                        <GradientStop Color="#0f93e7" Offset="0"/>
                        <GradientStop Color="#FFFFCB97" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Rectangle RadiusX="5" RadiusY="5" Fill="{TemplateBinding Control.Background}" Stroke="#0f93e7"
                         StrokeThickness="2"/>
                            <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" Padding="{TemplateBinding Control.Padding}" Focusable="false"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseDialogPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
            <Setter Property="FrameworkElement.Width" Value="260"/>
            <Setter Property="FrameworkElement.Height" Value="36"/>
            <Setter Property="Control.Padding" Value="3,0"/>
            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.FontSize" Value="16"/>
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                        <GradientStop Color="#0f93e7" Offset="0"/>
                        <GradientStop Color="#FFFFCB97" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Grid>
                            <Rectangle RadiusX="5" RadiusY="5" Fill="{TemplateBinding Control.Background}" Stroke="#0f93e7"
                         StrokeThickness="2"/>
                            <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" Padding="{TemplateBinding Control.Padding}" Focusable="false"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DialogTitle" TargetType="{x:Type Label}">
            <Setter Property="Canvas.Left" Value="55"/>
            <Setter Property="Canvas.Top" Value="11"/>
            <Setter Property="Control.FontSize" Value="16"/>
            <Setter Property="Control.Foreground" Value="White"/>
            <Setter Property="Control.FontWeight" Value="Bold"/>
        </Style>
        <Style x:Key="BaseDialogButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Control.FontSize" Value="18"/>
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                        <GradientStop Color="#0f93e7" Offset="0"/>
                        <GradientStop Color="#FFFFCB97" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle RadiusX="5" RadiusY="5" Fill="White" Stroke="#0f93e7" StrokeThickness="2"/>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                         FontSize="{TemplateBinding Control.FontSize}" Foreground="#29438e">
                <ContentPresenter/>
                            </TextBlock>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseSmallBorderButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Control.FontSize" Value="12"/>
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                        <GradientStop Color="#0f93e7" Offset="0"/>
                        <GradientStop Color="#FFFFCB97" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle RadiusX="5" RadiusY="5" Fill="White" Stroke="#0f93e7" StrokeThickness="2"/>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                         FontSize="{TemplateBinding Control.FontSize}" Foreground="{TemplateBinding Control.Foreground}">
                <ContentPresenter/>
                            </TextBlock>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseHeaderButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="15"/>
            <Setter Property="FrameworkElement.Margin" Value="6,0"/>
            <Setter Property="FrameworkElement.Height" Value="26"/>
            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle RadiusX="6" RadiusY="6" Fill="#0292f9"/>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Padding="20,0"
                         FontSize="14">
                <ContentPresenter/>
                            </TextBlock>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderThickness="0" Background="Transparent"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DatePickerToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderThickness="0" Background="Transparent"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseDialogComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                        <GradientStop Color="#0f93e7" Offset="0"/>
                        <GradientStop Color="#FFFFCB97" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsControl.ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="FrameworkElement.MinHeight" Value="22"/>
                        <Setter Property="FrameworkElement.MinWidth" Value="60"/>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border Name="Back" Background="Transparent" BorderThickness="0,0,0,0" BorderBrush="#81D779" Padding="5">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" ContentSource="{Binding Source}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                                            <Setter TargetName="Back" Property="Border.Background" Value="LightGray"/>
                                        </Trigger>
                                        <Trigger Property="ComboBoxItem.IsHighlighted" Value="true">
                                            <Setter TargetName="Back" Property="Border.Background" Value="LightGray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.7*"/>
                                <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle RadiusX="5" RadiusY="5" Fill="White" Stroke="#0f93e7" StrokeThickness="2" Grid.ColumnSpan="2"
                         Grid.Column="0"/>
                            <TextBlock Text="{TemplateBinding ComboBox.Text}" Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0"/>
                            <Grid Column="1">
                                <Path x:Name="PathFill" Fill="#28a9fb" Width="10" Height="7" StrokeThickness="0"
                      Data="M 5,0 L 10,10 0,10 Z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                    <UIElement.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </UIElement.RenderTransform>
                                </Path>
                            </Grid>
                            <ToggleButton Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource ComboxToggleButtonStyle}"
                            ClickMode="Press" Background="Transparent"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Popup x:Name="Popup" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Placement="Bottom"
                     Focusable="false" AllowsTransparency="true" PopupAnimation="Slide">
                                <Border x:Name="DropDown" CornerRadius="1" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                        MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" SnapsToDevicePixels="true">
                                    <UIElement.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                    </UIElement.Effect>
                                    <ScrollViewer Margin="2,3,2,3" Style="{DynamicResource ScrollViewerStyle}"
                                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" SnapsToDevicePixels="true"
                                HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="true">
                                        <StackPanel IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="PathFill" Property="Shape.Fill" Value="#065e9c"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                        <GradientStop Color="#24bdfa" Offset="0"/>
                        <GradientStop Color="#FFFFCB97" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsControl.ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="FrameworkElement.MinHeight" Value="22"/>
                        <Setter Property="FrameworkElement.MinWidth" Value="60"/>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border Name="Back" Background="Transparent" BorderThickness="0,0,0,0" BorderBrush="#81D779" Padding="5">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" ContentSource="{Binding Source}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                                            <Setter TargetName="Back" Property="Border.Background" Value="LightGray"/>
                                        </Trigger>
                                        <Trigger Property="ComboBoxItem.IsHighlighted" Value="true">
                                            <Setter TargetName="Back" Property="Border.Background" Value="LightGray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.7*"/>
                                <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle RadiusX="5" RadiusY="5" Fill="White" Stroke="#24bdfa" StrokeThickness="2" Grid.ColumnSpan="2"
                         Grid.Column="0"/>
                            <TextBlock Text="{TemplateBinding ComboBox.Text}" Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0"/>
                            <Grid Column="1">
                                <Path x:Name="PathFill" Fill="#28a9fb" Width="10" Height="7" StrokeThickness="0"
                      Data="M 5,0 L 10,10 0,10 Z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                    <UIElement.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </UIElement.RenderTransform>
                                </Path>
                            </Grid>
                            <ToggleButton Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource ComboxToggleButtonStyle}"
                            ClickMode="Press" Background="Transparent"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Popup x:Name="Popup" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Placement="Bottom"
                     Focusable="false" AllowsTransparency="true" PopupAnimation="Slide">
                                <Border x:Name="DropDown" CornerRadius="1" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                        MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" SnapsToDevicePixels="true">
                                    <UIElement.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                    </UIElement.Effect>
                                    <ScrollViewer Margin="2,3,2,3" Style="{DynamicResource ScrollViewerStyle}"
                                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" SnapsToDevicePixels="true"
                                HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="true">
                                        <StackPanel IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="PathFill" Property="Shape.Fill" Value="#065e9c"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ImageButton" TargetType="{x:Type Button}">
            <Setter Property="Control.BorderThickness" Value="0"/>
            <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Control.Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TopMenuNameStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.FontSize" Value="16"/>
            <Setter Property="TextBlock.FontWeight" Value="Bold"/>
            <Setter Property="FrameworkElement.Margin" Value="100,0,0,0"/>
        </Style>
        <Style x:Key="SecondMenuNameStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.FontSize" Value="14"/>
            <Setter Property="FrameworkElement.Margin" Value="140,0,0,0"/>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Rectangle Fill="#90000000" RadiusX="3" RadiusY="3"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.Background" Value="Transparent"/>
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="UIElement.Opacity" Value="0"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Control.Background}" Width="{TemplateBinding FrameworkElement.Width}"
                       Height="{TemplateBinding FrameworkElement.Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.Background" Value="Transparent"/>
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="UIElement.Opacity" Value="0"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Control.Background}" Width="{TemplateBinding FrameworkElement.Width}"
                       Height="{TemplateBinding FrameworkElement.Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="for_scrollbar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Control.Background" Value="Transparent"/>
            <Setter Property="FrameworkElement.Margin" Value="0,1,1,6"/>
            <Setter Property="FrameworkElement.Width" Value="5"/>
            <Setter Property="FrameworkElement.MinWidth" Value="5"/>
            <Setter Property="UIElement.Opacity" Value="0"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Track x:Name="PART_Track" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                    <Setter Property="Control.Background" Value="Transparent"/>
                    <Setter Property="FrameworkElement.Margin" Value="1,0,6,1"/>
                    <Setter Property="FrameworkElement.Height" Value="5"/>
                    <Setter Property="FrameworkElement.MinHeight" Value="5"/>
                    <Setter Property="FrameworkElement.Width" Value="Auto"/>
                    <Setter Property="UIElement.Opacity" Value="0"/>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Track x:Name="PART_Track" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                    Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                    Command="{x:Static ScrollBar.PageRightCommand}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="for_scrollviewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Control.BorderBrush" Value="LightGray"/>
            <Setter Property="Control.BorderThickness" Value="0"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
                            <Grid Background="{TemplateBinding Control.Background}">
                                <ScrollContentPresenter Cursor="{TemplateBinding FrameworkElement.Cursor}" Margin="{TemplateBinding Control.Padding}"
                                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"/>
                                <ScrollBar x:Name="PART_VerticalScrollBar" HorizontalAlignment="Right"
                           Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Orientation="Vertical"
                           Style="{StaticResource for_scrollbar}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                           Value="{TemplateBinding ScrollViewer.VerticalOffset}"
                           Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"/>
                                <ScrollBar x:Name="PART_HorizontalScrollBar" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                           Orientation="Horizontal" Style="{StaticResource for_scrollbar}" VerticalAlignment="Bottom"
                           Value="{TemplateBinding ScrollViewer.HorizontalOffset}"
                           ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                           Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="ScrollChanged">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1"
                                     Duration="0:0:1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0"
                                     Duration="0:0:1" BeginTime="0:0:1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1"
                                     Duration="0:0:1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0"
                                     Duration="0:0:1" BeginTime="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_VerticalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1"
                                     Duration="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_VerticalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0"
                                     Duration="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_HorizontalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1"
                                     Duration="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_HorizontalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0"
                                     Duration="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>